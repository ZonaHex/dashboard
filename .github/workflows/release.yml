on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

name: Release

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Clean up
        shell: bash
        run: rm -rf release && mkdir -p release

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run build
        run: npm run build:docker

      - name: Calculate checksum and rename binary
        shell: bash
        run: |
          tar -czvf release/build.tar.gz ./dist
          cd release && shasum -a 256 build.tar.gz > sha256.txt && cd ../

      - name: Upload artifacts
        uses: actions/upload-artifact@v4 
        with:
          name: build.tar.gz
          path: release/build.tar.gz

      - name: Upload checksum of artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sha256.txt
          path: release/sha256.txt

  release:
    name: Release artifacts
    # Release artifacts only when all the artifacts are built successfully.
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4 

      - name: Publish release
        uses: softprops/action-gh-release@v1
        if: github.event_name != 'schedule'
        with:
          name: 'Release ${{ github.ref_name }}'
          files: |
            **/build.tar.gz
            **/sha256.txt

  sync:
    name: Create PR to update tag
    needs: [build, release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'ZonaHex/greptimedb'
      - id: update-version
        run: |
          cd src/servers/dashboard/
          echo ${{ github.ref_name }} > VERSION
      - uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.ZONA }}
          commit-message: 'feat: update dashboard to ${{ github.ref_name }}'
          committer: GitHub Action <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: false
          branch: ${{ github.ref_name }}
          delete-branch: true
          title: 'feat: update dashboard to ${{ github.ref_name }}'
          body: |
            Update dashboard to: ${{ github.ref_name }}
          labels: |
            Doc not needed